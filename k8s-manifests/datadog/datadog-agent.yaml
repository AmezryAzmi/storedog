apiVersion: datadoghq.com/v2alpha1
kind: DatadogAgent
metadata:
  name: datadog
spec:
  global:
    clusterName: storedog-k8s
    site: datadoghq.com
    kubelet:
      tlsVerify: false
    credentials:
      apiSecret:
        secretName: datadog-secret
        keyName: api-key
      appSecret:
        secretName: datadog-secret
        keyName: app-key
  features:
    orchestratorExplorer:
      enabled: true
    liveContainerCollection:
      enabled: true
    apm:
      enabled: true
    eventCollection:
      collectKubernetesEvents: true
    logCollection:
      enabled: true
      containerCollectAll: true
    npm:
      enabled: true
    clusterChecks:
      enabled: true
  override:
    nodeAgent:
      tolerations:
        - key: node-role.kubernetes.io/control-plane
          operator: Exists
          effect: NoSchedule
      containers:
        agent:
          volumeMounts:
            - name: etcd-certs
              readOnly: true
              mountPath: /host/etc/kubernetes/pki/etcd
            - name: disable-etcd-autoconf
              mountPath: /etc/datadog-agent/conf.d/etcd.d
      volumes:
        - name: etcd-certs
          hostPath:
            path: /etc/kubernetes/pki/etcd
        - name: disable-etcd-autoconf
          emptyDir: {}
      extraConfd:
        configMap:
          name: datadog-checks
        configDataMap:
          nginx-ingress-controller.yaml: |-
            ad_identifiers:
              - controller
            init_config:
            instances:
              - prometheus_url: http://%%host%%:10254/metrics
                collect_nginx_histograms: true
            logs:
              - service: controller
                source: nginx-ingress-controller
          nginx.yaml: |-
            ad_identifiers:
              - controller
            init_config:
            instances:
              - nginx_status_url: http://%%host%%:18080/nginx_status
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: datadog-checks
data:
  etcd.yaml: |-
    ad_identifiers:
      - etcd
    init_config:
    instances:
      - prometheus_url: https://%%host%%:2379/metrics
        tls_ca_cert: /host/etc/kubernetes/pki/etcd/ca.crt
        tls_cert: /host/etc/kubernetes/pki/etcd/server.crt
        tls_private_key: /host/etc/kubernetes/pki/etcd/server.key
