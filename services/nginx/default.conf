server {
    listen 80;

    # Reverse proxy for ads
    location /services/ads {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        rewrite ^/services/ads(/.*)$ $1 break;
        # Proxy to ads-java, ensure trailing slash for proper URI handling
        proxy_pass http://ads:3030/;
    }

    # Reverse proxy for discounts 
    location /services/discounts {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Proxy to discounts service
        proxy_pass http://discounts:2814/;
    }

    # Reverse proxy for backend
    location /services/backend {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://backend:4000/;
    }

    resolver 127.0.0.11 valid=30s;  # Docker DNS resolver

    # Reverse proxy for dbm service (not used that often)
    location /services/dbm {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Use a variable for the proxy_pass to force runtime resolution
        set $upstream_dbm "http://dbm:7595/";
        proxy_pass $upstream_dbm;
        
        # Error handling as suggested before
        proxy_intercept_errors on;
        proxy_connect_timeout 5s;
    }

    # Reverse proxy for frontend (Next.js)
    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Websocket support for Next.js (if applicable)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Proxy to frontend
        proxy_pass http://frontend:3000;
    }
}
